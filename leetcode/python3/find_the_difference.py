"""
Leetcode #389 Find the Difference

You are given two strings s and t.

String t is generated by random shuffling string s and 
then add one more letter at a random position.

Return the letter that was added to t.

Example 1:
Input: s = "abcd", t = "abcde"
Output: "e"
Explanation: 'e' is the letter that was added.

Example 2:
Input: s = "", t = "y"
Output: "y"

Constraints:
0 <= s.length <= 1000
t.length == s.length + 1
s and t consist of lowercase English letters.

Algorithm/DS used: collections.Counter to count occurrences

O(N) worst case time where N is the length of the larger of s or t

O(N) worst case space where N is the length of the larger of s or t

"""


import collections


class Solution:
    def findTheDifference(self, s: str, t: str) -> str:
        c = collections.Counter()
        for l in s:
            c[l] += 1
        for l2 in t:
            if c[l2] > 0:
                c[l2] -= 1
            else:
                return l2


def test_solution():
    s = Solution()
    print("Expected result from input  s = \"abcd\", t = \"abcde\" is \"e\" and the Actual result is: " +
          str(s.findTheDifference("abcd", "abcde")))
    assert s.findTheDifference("abcd", "abcde") == 'e'
    assert s.findTheDifference("", "y") == 'y'


if __name__ == "__main__":
    test_solution()
